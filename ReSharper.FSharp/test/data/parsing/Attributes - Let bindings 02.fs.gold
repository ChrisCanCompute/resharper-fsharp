Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
    ILetModuleDecl
      IFSharpAttribute
        ITypeReferenceName
          FSharpIdentifierToken(type:IDENTIFIER, text:Foo)
      FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
      NewLine(type:NEW_LINE, text:\n) spaces:"\n"
      FSharpTokenType+LetTokenElement(type:LET, text:let)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      ITopBinding
        FSharpTokenType+LbrackLessTokenElement(type:LBRACK_LESS, text:[<)
        IFSharpAttribute
          ITypeReferenceName
            FSharpIdentifierToken(type:IDENTIFIER, text:Bar)
        FSharpTokenType+GreaterRbrackTokenElement(type:GREATER_RBRACK, text:>])
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        ITopNamedPat
          FSharpIdentifierToken(type:IDENTIFIER, text:x)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IChameleonExpression
          IConstExpr
            FSharpToken(type:INT32, text:1)

