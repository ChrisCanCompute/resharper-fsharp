Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    ILetModuleDecl
      FSharpTokenType+LetTokenElement(type:LET, text:let)
      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
      ITopBinding
        IWildPat
          FSharpTokenType+UnderscoreTokenElement(type:UNDERSCORE, text:_)
        IReturnTypeInfo
          FSharpTokenType+ColonTokenElement(type:COLON, text::)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          ITupleType
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            ITupleType
              INamedType
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:int)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              FSharpTokenType+StarTokenElement(type:STAR, text:*)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              INamedType
                ITypeReferenceName
                  FSharpIdentifierToken(type:IDENTIFIER, text:int)
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            FSharpTokenType+StarTokenElement(type:STAR, text:*)
            Whitespace(type:WHITE_SPACE, text: ) spaces:" "
            INamedType
              ITypeReferenceName
                FSharpIdentifierToken(type:IDENTIFIER, text:int)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
        Whitespace(type:WHITE_SPACE, text: ) spaces:" "
        IChameleonExpression
          IConstExpr
            FSharpTokenType+LparenTokenElement(type:LPAREN, text:()
            FSharpTokenType+RparenTokenElement(type:RPAREN, text:))
    NewLine(type:NEW_LINE, text:\n) spaces:"\n"

