Language: PsiLanguageType:F#
IFSharpImplFile
  IAnonModuleDeclaration
    IExpressionStatement
      IChameleonExpression
        IPrefixAppExpr
          IReferenceExpr
            FSharpIdentifierToken(type:IDENTIFIER, text:seq)
          Whitespace(type:WHITE_SPACE, text: ) spaces:" "
          IComputationExpr
            FSharpTokenType+LbraceTokenElement(type:LBRACE, text:{)
            NewLine(type:NEW_LINE, text:\n) spaces:"\n"
            Whitespace(type:WHITE_SPACE, text:    ) spaces:"    "
            IForExpr
              FSharpTokenType+ForTokenElement(type:FOR, text:for)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              ILocalDeclaration
                FSharpIdentifierToken(type:IDENTIFIER, text:i)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              ILiteralExpr
                FSharpToken(type:INT32, text:0)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              FSharpTokenType+ToTokenElement(type:TO, text:to)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              ILiteralExpr
                FSharpToken(type:INT32, text:1)
              Whitespace(type:WHITE_SPACE, text: ) spaces:" "
              FSharpTokenType+DoTokenElement(type:DO, text:do)
              NewLine(type:NEW_LINE, text:\n) spaces:"\n"
              Whitespace(type:WHITE_SPACE, text:        ) spaces:"        "
              IYieldOrReturnExpr
                FSharpTokenType+YieldTokenElement(type:YIELD, text:yield)
                Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                IAnonRecordExpr
                  FSharpTokenType+LbraceBarTokenElement(type:LBRACE_BAR, text:{|)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  IRecordFieldBindingList
                    IRecordFieldBinding
                      IExpressionReferenceName
                        FSharpIdentifierToken(type:IDENTIFIER, text:Index)
                      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                      FSharpTokenType+EqualsTokenElement(type:EQUALS, text:=)
                      Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                      IReferenceExpr
                        FSharpIdentifierToken(type:IDENTIFIER, text:i)
                  Whitespace(type:WHITE_SPACE, text: ) spaces:" "
                  FSharpTokenType+BarRbraceTokenElement(type:BAR_RBRACE, text:|})
            NewLine(type:NEW_LINE, text:\n) spaces:"\n"
            FSharpTokenType+RbraceTokenElement(type:RBRACE, text:})
  NewLine(type:NEW_LINE, text:\n) spaces:"\n"

